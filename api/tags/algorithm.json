{"name":"algorithm","slug":"algorithm","count":7,"postlist":[{"title":"STL使用手册","uid":"0b411eca06d29c39e2fc21f5cd175527","slug":"STL使用手册","date":"2021-08-13T06:15:31.000Z","updated":"2021-08-27T03:18:58.396Z","comments":true,"path":"api/articles/STL使用手册.json","keywords":null,"cover":null,"text":"STL使用手册Standard Template Library 又名《👴怕忘了先把他写下来》 我 是 谁 ?斯丹德儿的 坦普雷特 莱博瑞 即标准模板库 重要特点：数据结构和算法的分离 重要特性：不是面向对象的 逻辑层次：体现了泛型化程序设计的思想 实现层次：以一种类型参数化的方...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"ALGORITHMS","slug":"ALGORITHMS","count":5,"path":"api/categories/ALGORITHMS.json"}],"tags":[{"name":"ACM","slug":"ACM","count":15,"path":"api/tags/ACM.json"},{"name":"note","slug":"note","count":9,"path":"api/tags/note.json"},{"name":"algorithm","slug":"algorithm","count":7,"path":"api/tags/algorithm.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"https://ww2.sinaimg.cn/mw2000/9d9cfdb9gw1ecykj9c3y4j202x02xt8m.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"kmp & exkmp","uid":"e2155c016c02706041cead02c4e9a9a6","slug":"kmp & exkmp","date":"2021-10-23T17:02:50.000Z","updated":"2021-11-27T04:18:05.300Z","comments":true,"path":"api/articles/kmp & exkmp.json","keywords":null,"cover":[],"text":"kmp &amp; exkmpKnuth-Morris-Pratt &amp; entend kmp 字符串匹配 kmp Keywords：next[] 由BF改进，O(m+n)，传世经典属于是😅 以下均假设主串为 S，模式串为 P What is next[] ? 针对模式串，...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"ALGORITHMS","slug":"ALGORITHMS","count":5,"path":"api/categories/ALGORITHMS.json"}],"tags":[{"name":"ACM","slug":"ACM","count":15,"path":"api/tags/ACM.json"},{"name":"note","slug":"note","count":9,"path":"api/tags/note.json"},{"name":"string","slug":"string","count":5,"path":"api/tags/string.json"},{"name":"algorithm","slug":"algorithm","count":7,"path":"api/tags/algorithm.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"https://ww2.sinaimg.cn/mw2000/9d9cfdb9gw1ecykj9c3y4j202x02xt8m.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"kmp专题训练","uid":"eb0105647eb3a218c386b75ad79d5f5a","slug":"kmp_problem","date":"2021-11-26T13:59:50.000Z","updated":"2021-11-27T04:15:38.843Z","comments":true,"path":"api/articles/kmp_problem.json","keywords":null,"cover":null,"text":"kmp/ekmp 专题训练 🐴糙人蠢凑合看 0x01 剪花布条 HDU-2087 link 纯纯kmp裸题，不可重叠计数 #include&lt;bits&#x2F;stdc++.h&gt; using namespace std; void kmp_pre(string p, ...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"ALGORITHM TRAINING","slug":"ALGORITHM-TRAINING","count":2,"path":"api/categories/ALGORITHM-TRAINING.json"}],"tags":[{"name":"ACM","slug":"ACM","count":15,"path":"api/tags/ACM.json"},{"name":"string","slug":"string","count":5,"path":"api/tags/string.json"},{"name":"algorithm","slug":"algorithm","count":7,"path":"api/tags/algorithm.json"},{"name":"kmp","slug":"kmp","count":1,"path":"api/tags/kmp.json"},{"name":"dp","slug":"dp","count":2,"path":"api/tags/dp.json"},{"name":"前缀和","slug":"前缀和","count":1,"path":"api/tags/前缀和.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"https://ww2.sinaimg.cn/mw2000/9d9cfdb9gw1ecykj9c3y4j202x02xt8m.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Trie","uid":"f9c5a67ed89813cc4d2fda9f690375dd","slug":"trie","date":"2021-11-27T03:55:50.000Z","updated":"2021-11-27T04:18:46.512Z","comments":true,"path":"api/articles/trie.json","keywords":null,"cover":[],"text":"Trie字典树/前缀树 什么是Trie 从根节点到每个单词结点的路径上所有字母连接成的字符串就是该结点对应的字符串 多叉树，最大分支数由字典的字符集含有的字符数决定 操作 插入字符串 insert 初始化 root = 0 , 遍历字符串, 对于其每一个字符, 计算其映射值 id...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"ALGORITHMS","slug":"ALGORITHMS","count":5,"path":"api/categories/ALGORITHMS.json"}],"tags":[{"name":"ACM","slug":"ACM","count":15,"path":"api/tags/ACM.json"},{"name":"note","slug":"note","count":9,"path":"api/tags/note.json"},{"name":"string","slug":"string","count":5,"path":"api/tags/string.json"},{"name":"algorithm","slug":"algorithm","count":7,"path":"api/tags/algorithm.json"},{"name":"Trie","slug":"Trie","count":2,"path":"api/tags/Trie.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"https://ww2.sinaimg.cn/mw2000/9d9cfdb9gw1ecykj9c3y4j202x02xt8m.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Trie专题训练","uid":"845d8d8490a208e5b118592a6863cd87","slug":"trie_problem","date":"2021-11-27T04:20:00.000Z","updated":"2021-11-27T04:15:19.913Z","comments":true,"path":"api/articles/trie_problem.json","keywords":null,"cover":null,"text":"Trie 专题训练0.0 0x01 统计难题 HDU 1251 link 题意：给了一堆字符串，统计以模式串作前缀出现的单词个数 trie入门题，存结点时统计一下过当前结点的单词个数即可 &#x2F;&#x2F;对于字符串比较多的要统计个数的，map被卡的情况下，直接用字典树 &...","link":"","photos":[],"count_time":{"symbolsCount":"7.2k","symbolsTime":"7 mins."},"categories":[{"name":"ALGORITHM TRAINING","slug":"ALGORITHM-TRAINING","count":2,"path":"api/categories/ALGORITHM-TRAINING.json"}],"tags":[{"name":"ACM","slug":"ACM","count":15,"path":"api/tags/ACM.json"},{"name":"string","slug":"string","count":5,"path":"api/tags/string.json"},{"name":"algorithm","slug":"algorithm","count":7,"path":"api/tags/algorithm.json"},{"name":"dp","slug":"dp","count":2,"path":"api/tags/dp.json"},{"name":"Trie","slug":"Trie","count":2,"path":"api/tags/Trie.json"},{"name":"dfs","slug":"dfs","count":1,"path":"api/tags/dfs.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"https://ww2.sinaimg.cn/mw2000/9d9cfdb9gw1ecykj9c3y4j202x02xt8m.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"博弈论","uid":"1f59b3eb6e524ce1c0f6b34920ea6c38","slug":"博弈论","date":"2021-07-31T01:51:28.000Z","updated":"2021-08-27T03:19:04.133Z","comments":true,"path":"api/articles/博弈论.json","keywords":null,"cover":null,"text":"博弈论Game Theory Nim游戏属于 ICG (Impartial Combinatorial Games) 的一种，满足条件如下： 两名选手交替移动，在有限的合法移动集合中任选一种进行移动 对于任何一种局面，合法的移动集合只取决于局面本身 到谁无法移动谁就输了 以下给出...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"ALGORITHMS","slug":"ALGORITHMS","count":5,"path":"api/categories/ALGORITHMS.json"}],"tags":[{"name":"ACM","slug":"ACM","count":15,"path":"api/tags/ACM.json"},{"name":"note","slug":"note","count":9,"path":"api/tags/note.json"},{"name":"algorithm","slug":"algorithm","count":7,"path":"api/tags/algorithm.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"https://ww2.sinaimg.cn/mw2000/9d9cfdb9gw1ecykj9c3y4j202x02xt8m.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"我确实不会线段树","uid":"e4b68a32c6fd94c2953f12692556d556","slug":"线段树","date":"2021-08-06T08:14:31.000Z","updated":"2021-10-19T12:15:21.108Z","comments":true,"path":"api/articles/线段树.json","keywords":null,"cover":[],"text":"线段树Segment Tree 一个问题，只要能化成对一些连续点的修改和统计问题，基本就可以用线段树来艹了 原理：将[1,n]分解成若干特定的子区间(数量不超过4*n),然后，将每个区间[L,R]都分解为少量特定的子区间，通过对这些少量子区间的修改或者统计，来实现快速对[L,R]...","link":"","photos":[],"count_time":{"symbolsCount":"8.6k","symbolsTime":"8 mins."},"categories":[{"name":"ALGORITHMS","slug":"ALGORITHMS","count":5,"path":"api/categories/ALGORITHMS.json"}],"tags":[{"name":"ACM","slug":"ACM","count":15,"path":"api/tags/ACM.json"},{"name":"note","slug":"note","count":9,"path":"api/tags/note.json"},{"name":"algorithm","slug":"algorithm","count":7,"path":"api/tags/algorithm.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"https://ww2.sinaimg.cn/mw2000/9d9cfdb9gw1ecykj9c3y4j202x02xt8m.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}