{"title":"sql学习笔记","uid":"3da5b418046b7895ffe91ec3b92eec28","slug":"note/sql","date":"2021-07-28T16:07:28.000Z","updated":"2022-01-22T09:36:48.564Z","comments":true,"path":"api/articles/note/sql.json","keywords":null,"cover":"https://img.php.cn/upload/article/000/000/194/94356ed93d087dbd43d26949a1f09ec5.png","content":"<h1 id=\"SQL\"><a href=\"#SQL\" class=\"headerlink\" title=\"SQL\"></a>SQL</h1><p>结构化查询语言-Structured Query Language</p>\n<p><em><strong>@author：Maskros</strong></em></p>\n<hr>\n<h2 id=\"Type\"><a href=\"#Type\" class=\"headerlink\" title=\"Type\"></a>Type</h2><p>类型</p>\n<ul>\n<li>字符型<ul>\n<li>VARCHAR型和CHAR型</li>\n</ul>\n</li>\n<li>文本型<ul>\n<li>TEXT</li>\n</ul>\n</li>\n<li>数值型<ul>\n<li>整数INT 、小数NUMERIC、钱数MONEY)</li>\n</ul>\n</li>\n<li>逻辑型<ul>\n<li>BIT</li>\n</ul>\n</li>\n<li>日期型<ul>\n<li>DATETIME </li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"Operation\"><a href=\"#Operation\" class=\"headerlink\" title=\"Operation\"></a>Operation</h2><p>操作</p>\n<p>增删改查 CURD</p>\n<p>tips : 不区分大小写，列名表名前``可以省略</p>\n<h3 id=\"SELECT-FROM\"><a href=\"#SELECT-FROM\" class=\"headerlink\" title=\"SELECT(FROM)\"></a>SELECT(FROM)</h3><ul>\n<li>SELECT COLUMN 查询单个列</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>SELECT COLUMN, COLUMN 查询多个列</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name_1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name_2<span class=\"token punctuation\">`</span></span>  \n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>使用 SELECT * 查询所有列</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>使用 SELECT DISTINCT 查询不同行</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>​    希望查询的值都是唯一不重复的</p>\n<ul>\n<li>SELECT WHERE 对行进行筛选过滤</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name2<span class=\"token punctuation\">`</span></span>…\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> operator <span class=\"token identifier\"><span class=\"token punctuation\">`</span>value<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"INSERT-INTO\"><a href=\"#INSERT-INTO\" class=\"headerlink\" title=\"INSERT(INTO)\"></a>INSERT(INTO)</h3><ul>\n<li>INSERT INTO 在不指定列的情况下插入数据</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>value1<span class=\"token punctuation\">,</span> value2<span class=\"token punctuation\">,</span> value3<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 'value'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>INSERT INTO 在指定的列中插入数据</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column2<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column3<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>value1<span class=\"token punctuation\">,</span> value2<span class=\"token punctuation\">,</span> value3<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"UPDATE-SET\"><a href=\"#UPDATE-SET\" class=\"headerlink\" title=\"UPDATE(SET)\"></a>UPDATE(SET)</h3><ul>\n<li>UPDATE 更新数据</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">SET</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column1<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span>value1<span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column2<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span>value2<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>some_column<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span>some_value<span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># WHERE 可以省略</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"DELETE-FROM\"><a href=\"#DELETE-FROM\" class=\"headerlink\" title=\"DELETE(FROM)\"></a>DELETE(FROM)</h3><ul>\n<li>DELETE 删除数据</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>some_column<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">=</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>some_value<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>TRUNCATE TABLE 清空表</li>\n</ul>\n<hr>\n<h2 id=\"Condition\"><a href=\"#Condition\" class=\"headerlink\" title=\"Condition\"></a>Condition</h2><p>条件</p>\n<h3 id=\"比较运算符\"><a href=\"#比较运算符\" class=\"headerlink\" title=\"比较运算符\"></a>比较运算符</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">WHERE</span> A OPERATOR B<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>tips:  <code>&lt;&gt;</code> , <code>!=</code> 均为不等于，但用法不同</li>\n</ul>\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><ul>\n<li><p>AND 连接多条件</p>\n</li>\n<li><p>OR 连接多条件</p>\n</li>\n<li><p>NOT 过滤不满足条件的数据</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> \n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span> \n<span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>condition<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># (condition1 operator condition2)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"特殊条件\"><a href=\"#特殊条件\" class=\"headerlink\" title=\"特殊条件\"></a>特殊条件</h3><ul>\n<li>IN 查询多条件</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">Where</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name1<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># condition 中也可以写</span>\n<span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name1<span class=\"token punctuation\">`</span></span> xxxxxxxx<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>NOT IN 排除</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token operator\">NOT</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">IN</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>value<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># （value1, value2）</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>BETWEEN AND 查询两值间的数据范围</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">BETWEEN</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>value<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">AND</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>value<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>IS NULL 查询空数据</li>\n<li>使用 LIKE 模糊查询</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">LIKE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>value<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># LIKE `D%`</span>\n<span class=\"token comment\"># 'D%' 表示以D开头的所有单词，% 表示为通配符，可以替代0~n个字符</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"ORDER-BY-amp-LIMIT\"><a href=\"#ORDER-BY-amp-LIMIT\" class=\"headerlink\" title=\"ORDER BY &amp; LIMIT\"></a>ORDER BY &amp; LIMIT</h3><ul>\n<li><p>ORDER BY 对数据进行排序（一列/多列(多列按SELECT顺序)）</p>\n<p>ASC (ascend)升序(默认)  |  DESC(descend) 降序</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">SELECT &#96;column_name&#96;, &#96;column_name&#96;\nFROM &#96;table_name&#96;\n# WHERE XXXX\nORDER BY &#96;column_name&#96;, &#96;column_name&#96; ASC|DESC; <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>使用 LIMIT 限制输出行数</p>\n<p>offset ：是返回集的初始标注，起始点是0</p>\n<p>count ：制定返回的数量</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token comment\"># ORDER BY XXXX</span>\n<span class=\"token keyword\">LIMIT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>offset<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>count<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># offset和count通常只用一个count：LIMIT (0,)1 </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Function\"><a href=\"#Function\" class=\"headerlink\" title=\"Function\"></a>Function</h2><p>函数</p>\n<h3 id=\"算数函数\"><a href=\"#算数函数\" class=\"headerlink\" title=\"算数函数\"></a>算数函数</h3><ul>\n<li>AVG() 函数求数值列的平均值</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># AS `column2_name`</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li><p>MAX() 函数返回指定列中的最大值</p>\n</li>\n<li><p>MIN() 函数返回指定列中的最小值</p>\n</li>\n<li><p>SUM() 函数统计数值列的总数</p>\n</li>\n<li><p>ROUND() 函数将数值四舍五入</p>\n<ul>\n<li>ROUND() 返回值数据类型会被变换为一个BIGINT 。</li>\n<li>当 decimals 为正数时，column_name 四舍五入为 decimals 所指定的小数位数。省略decimals自动保留四舍五入后的整数。当 decimals 为负数时，column_name 则按 decimals 所指定的在小数点的左边四舍五入。</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token function\">ROUND</span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>decimals<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#decimals 规定要返回的小数位数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li><p>NULL() 函数判断空值</p>\n<ul>\n<li><p>ISNULL()</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> ISNULL<span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 返回 0 或 1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li><p>IFNULL()</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> IFNULL<span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>value<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 是 NULL 则返回 value 值，不是则返回对应内容</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p>COUNT() 函数计数</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># COUNT(column_name) 对列具有的行数进行计数 除去值为 NULL 的行</span>\n<span class=\"token comment\"># 主要用于查看各列数据的数量情况，便于统计数据的缺失值</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># COUNT(*) 对表中行的数目进行计数,包括 NULL 所在行和重复项所在行</span>\n<span class=\"token comment\"># 主要用于查看表中的记录数</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># COUNT(DISTINCT column_name) 函数返回指定列的不同值的数目</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">DISTINCT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"时间函数\"><a href=\"#时间函数\" class=\"headerlink\" title=\"时间函数\"></a>时间函数</h3><ul>\n<li><p>NOW()，CURDATE()、CURTIME() 获取当前时间</p>\n<ul>\n<li><code>NOW()</code> 返回当前日期和时间  YYYY-MM-DD hh:mm:ss</li>\n<li><code>CURDATE()</code> 返回当前日期  YYYY-MM-DD</li>\n<li><code>CURTIME()</code> 返回当前时间  hh:mm:ss</li>\n<li>要精确的秒以后的时间的话，可以在 () 中加数字，加多少，就表示精确到秒后多少位</li>\n</ul>\n</li>\n<li><p>DATE()、TIME() 函数提取日期和时间</p>\n</li>\n<li><p>EXTRACT() 函数提取指定的时间信息</p>\n<ul>\n<li><p>FROM</p>\n</li>\n<li><p>返回日期/时间的单独部分</p>\n</li>\n<li><p>unit :  <code>YEAR</code> (年)、<code>MONTH</code> (月)、<code>DAY</code> (日)、<code>HOUR</code> (小时)、<code>MINUTE</code> (分钟)、 <code>SECOND</code> (秒)</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> EXTRACT<span class=\"token punctuation\">(</span>unit <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># unit 为单独部分名</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table<span class=\"token punctuation\">`</span></span>\n<span class=\"token comment\"># date - 合法column</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n</li>\n<li><p>DATE_FORMAT() 格式化输出日期</p>\n<ul>\n<li>%Y 年份 %m 月份 %d 日期 %w 星期 %H 小时  %i 分钟 %s 秒</li>\n<li>小写y 表示年份后两位，小写h表示12小时计的小时</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> DATE_FORMAT<span class=\"token punctuation\">(</span><span class=\"token keyword\">date</span><span class=\"token punctuation\">,</span><span class=\"token string\">'format'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>DATE_ADD() 增加时间</p>\n<ul>\n<li>INTERVAL</li>\n<li>向日期添加指定的时间间隔</li>\n<li> <code>expr</code> 是希望添加的时间间隔的数值</li>\n<li>type :  MICROSECOND , SECOND , MINUTE , HOUR , DAY , WEEK , MONTH , QUARTER , YEAR</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> DATE_ADD<span class=\"token punctuation\">(</span><span class=\"token keyword\">date</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">INTERVAL</span> expr <span class=\"token keyword\">type</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> table_name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>DATE_SUB() 减少时间</p>\n</li>\n<li><p>DATEDIFF() 和 TIMESTAMPDIFF() 计算日期差</p>\n<ul>\n<li>时间1-时间2</li>\n<li>DATEDIFF() 默认只能计算天数差</li>\n</ul>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\">SELECT DATEDIFF(时间1,时间2) AS date_diff FROM courses;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>TIMESTAMPDIFF() 计算相差年月周日时<ul>\n<li>类型YEAR,MONTH,WEEK,DAY,HOUR</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> TIMESTAMPDIFF <span class=\"token punctuation\">(</span>类型<span class=\"token punctuation\">,</span>时间<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>时间<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> year_diff；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<hr>\n<h2 id=\"Constraints\"><a href=\"#Constraints\" class=\"headerlink\" title=\"Constraints\"></a>Constraints</h2><p>约束</p>\n<h3 id=\"NOT-NULL\"><a href=\"#NOT-NULL\" class=\"headerlink\" title=\"NOT NULL\"></a>NOT NULL</h3><p>非空约束</p>\n<ul>\n<li>强制列不接受 NULL 值</li>\n</ul>\n<pre class=\"line-numbers language-SQL\" data-language=\"SQL\"><code class=\"language-SQL\"># 建表\nCREATE TABLE &#96;Persons&#96; (\n    &#96;ID&#96; int NOT NULL,\n    &#96;LastName&#96; varchar(255)\n);\n# 已建表\nALTER TABLE &#96;Persons&#96;\nMODIFY &#96;Age&#96; int NOT NULL;\n# 撤销\nALTER TABLE &#96;Persons&#96;\nMODIFY &#96;Age&#96; int NULL;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"UNIQUE\"><a href=\"#UNIQUE\" class=\"headerlink\" title=\"UNIQUE\"></a>UNIQUE</h3><p>唯一约束</p>\n<ul>\n<li>不希望出现重复记录</li>\n<li>CONSTRAINT 命名</li>\n<li>DROP 撤销</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 建表</span>\n<span class=\"token comment\">## MySQL</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Persons<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>P_Id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">UNIQUE</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>P_Id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## SQL Server / Oracle / MS Access</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Persons<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span>\n\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>P_Id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## 命名+多列</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Persons<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>P_Id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>LastName<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">CONSTRAINT</span> uc_PersonID <span class=\"token keyword\">UNIQUE</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>P_Id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>LastName<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 已建</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Persons<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">ADD</span> <span class=\"token keyword\">UNIQUE</span>（<span class=\"token identifier\"><span class=\"token punctuation\">`</span>P_Id<span class=\"token punctuation\">`</span></span>）\n<span class=\"token comment\">## 多列</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Persons<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> uc_PersonID <span class=\"token keyword\">UNIQUE</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>P_Id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>LastName<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 撤销</span>\n<span class=\"token comment\">## MySQL</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Persons<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">INDEX</span> uc_PersonID\n<span class=\"token comment\">## SQL Server / Oracle / MS Access</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Persons<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">CONSTRAINT</span> uc_PersonID<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"PRIMARY-KEY\"><a href=\"#PRIMARY-KEY\" class=\"headerlink\" title=\"PRIMARY KEY\"></a>PRIMARY KEY</h3><p>主键约束</p>\n<ul>\n<li>简单的说，PRIMARY KEY = UNIQUE + NOT NULL </li>\n<li>NOT NULL UNIQUE 可以将表的一列或多列定义为唯一性属性，而 PRIMARY KEY 设为多列时，仅能保证多列之和是唯一的，具体到某一列可能会重复。</li>\n<li>PRIMARY KEY 可以与外键配合，从而形成主从表的关系</li>\n<li>PRIMARY KEY 一般在逻辑设计中用作记录标识，这也是设置 PRIMARY KEY 的本来用意，而 UNIQUE 只是为了保证域/域组的唯一性</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 建表</span>\n<span class=\"token comment\">## MySQL</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Persons(\n    <span class=\"token punctuation\">`</span></span>P_Id<span class=\"token identifier\"><span class=\"token punctuation\">`</span> int NOT NULL,\n    PRIMARY KEY (<span class=\"token punctuation\">`</span></span>P_Id<span class=\"token identifier\"><span class=\"token punctuation\">`</span>)\n);\n## SQL Server / Oracle / MS Access\nCREATE TABLE <span class=\"token punctuation\">`</span></span>Persons<span class=\"token identifier\"><span class=\"token punctuation\">`</span>(\n    <span class=\"token punctuation\">`</span></span>P_Id<span class=\"token identifier\"><span class=\"token punctuation\">`</span> int NOT NULL PRIMARY KEY,\n)\n## 命名+多列\nCONSTRAINT pk_PersonID PRIMARY KEY (<span class=\"token punctuation\">`</span></span>P_Id<span class=\"token identifier\"><span class=\"token punctuation\">`</span>,<span class=\"token punctuation\">`</span></span>LastName<span class=\"token identifier\"><span class=\"token punctuation\">`</span>)\n\n# 已建\nALTER TABLE <span class=\"token punctuation\">`</span></span>Persons<span class=\"token identifier\"><span class=\"token punctuation\">`</span>\nADD PRIMARY KEY (<span class=\"token punctuation\">`</span></span>P_Id<span class=\"token identifier\"><span class=\"token punctuation\">`</span>)\n## 多列\nALTER TABLE <span class=\"token punctuation\">`</span></span>Persons<span class=\"token identifier\"><span class=\"token punctuation\">`</span>\nADD CONSTRAINT pk_PersonID PRIMARY KEY (<span class=\"token punctuation\">`</span></span>P_Id<span class=\"token identifier\"><span class=\"token punctuation\">`</span>,<span class=\"token punctuation\">`</span></span>LastName<span class=\"token identifier\"><span class=\"token punctuation\">`</span>)\n\n# 撤销\n## MySQL\nALTER TABLE <span class=\"token punctuation\">`</span></span>Persons<span class=\"token identifier\"><span class=\"token punctuation\">`</span>\nDROP PRIMARY KEY\n## SQL Server / Oracle / MS Access\nALTER TABLE <span class=\"token punctuation\">`</span></span>Persons<span class=\"token punctuation\">`</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">CONSTRAINT</span> pk_PersonID<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"FOREIGN-KEY\"><a href=\"#FOREIGN-KEY\" class=\"headerlink\" title=\"FOREIGN KEY\"></a>FOREIGN KEY</h3><p>外键约束 </p>\n<ul>\n<li>一个表中的 FOREIGN KEY 指向另一个表中的 UNIQUE KEY </li>\n<li>保证数据的完整性和一致性</li>\n<li>在两个表之间建立关系，需要指定引用主表的哪一列，REFERENCES 表示引用一个表</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 建表</span>\n<span class=\"token comment\">## MySQL</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Orders<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>P_Id<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>P_Id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> Persons<span class=\"token punctuation\">(</span>P_Id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## SQL Server / Oracle / MS Access</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Orders<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span>\n    P_Id <span class=\"token keyword\">int</span> <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">REFERENCES</span> Persons<span class=\"token punctuation\">(</span>P_Id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## 命名+多列</span>\n<span class=\"token keyword\">CONSTRAINT</span> fk_PerOrders <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>P_Id<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">REFERENCES</span> Persons<span class=\"token punctuation\">(</span>P_Id<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 已建</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Orders<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">ADD</span> <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>P_Id<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">REFERENCES</span> Persons<span class=\"token punctuation\">(</span>P_Id<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## 命名</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Orders<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> fk_PerOrders\n<span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>P_Id<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">REFERENCES</span> Persons<span class=\"token punctuation\">(</span>P_Id<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 撤销</span>\n<span class=\"token comment\">## MySQL</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Orders<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> fk_PerOrders\n<span class=\"token comment\">## SQL Server / Oracle / MS Access</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Orders<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">CONSTRAINT</span> fk_PerOrders<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"CHECK\"><a href=\"#CHECK\" class=\"headerlink\" title=\"CHECK\"></a>CHECK</h3><p>检查约束 </p>\n<ul>\n<li>限制列中的值的范围，评估插入或修改后的值。满足条件插入，否不插</li>\n<li>可以为同一列指定多个 CHECK 约束</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 建表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>courses<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span>\n\t<span class=\"token identifier\"><span class=\"token punctuation\">`</span>student_count<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> …\n\t<span class=\"token keyword\">CHECK</span> <span class=\"token punctuation\">(</span>Condition1 <span class=\"token operator\">AND</span> Condition2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">## 命名</span>\n<span class=\"token keyword\">CONSTRAINT</span> chk_courses <span class=\"token keyword\">CHECK</span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>student_count<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 已建</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>courses<span class=\"token punctuation\">`</span></span> \n<span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CHECK</span> <span class=\"token punctuation\">(</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>student_count<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">## ADD CONSTRAINT XXX CHECK (Condition);</span>\n\n<span class=\"token comment\"># 撤销</span>\n<span class=\"token comment\">## MySQL</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>courses<span class=\"token punctuation\">`</span></span> \n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">CHECK</span> chk_courses\n<span class=\"token comment\">## SQL Server / Oracle / MS Access</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>courses<span class=\"token punctuation\">`</span></span> \n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">CONSTRAINT</span> chk_courses<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"DEFAULT\"><a href=\"#DEFAULT\" class=\"headerlink\" title=\"DEFAULT\"></a>DEFAULT</h3><p>默认约束</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token identifier\"><span class=\"token punctuation\">`</span>City<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'Sandnes'</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>OrderDate<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">date</span> <span class=\"token keyword\">DEFAULT</span> GETDATE<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 可以用函数</span>\n\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>Persons<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>City<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">SET</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'SANDNES'</span>\n<span class=\"token keyword\">ADD</span> <span class=\"token keyword\">CONSTRAINT</span> ab_c <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">'SANDNES'</span> <span class=\"token keyword\">for</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>City<span class=\"token punctuation\">`</span></span>\n\n<span class=\"token keyword\">ALTER</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>City<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">DEFAULT</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">COLUMN</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>City<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">DROP</span> <span class=\"token keyword\">DEFAULT</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Join\"><a href=\"#Join\" class=\"headerlink\" title=\"Join\"></a>Join</h2><p>多表联结</p>\n<h3 id=\"联结\"><a href=\"#联结\" class=\"headerlink\" title=\"联结\"></a>联结</h3><ul>\n<li><p>在一条 SELECT 语句中关联多个表，返回一组输出</p>\n</li>\n<li><p>两大主角 : 主键 (PRIMARY KEY) 和外键 (FOREIGN KEY)</p>\n</li>\n<li><p>使用完全限定列名（用一个点分隔表名和列名）</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># condition</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>table1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>common_field<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">=</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table2<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>common_field<span class=\"token punctuation\">`</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>JOIN 连接子句<ul>\n<li><strong>INNER JOIN</strong> 内连接：如果表中有至少一个匹配，则返回行</li>\n<li><strong>OUTER JOIN</strong> 外连接<ul>\n<li><strong>LEFT JOIN</strong>：即使右表中没有匹配，也从左表返回所有的行</li>\n<li><strong>RIGHT JOIN</strong>：即使左表中没有匹配，也从右表返回所有的行</li>\n</ul>\n</li>\n<li><strong>FULL JOIN</strong> 全连接：只要其中一个表中存在匹配，则返回行</li>\n<li><strong>CROSS JOIN</strong> 交叉连接：又称<strong>笛卡尔积</strong>，两个表数据一一对应，返回结果的行数等于两个表行数的乘积</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"INNER-JOIN\"><a href=\"#INNER-JOIN\" class=\"headerlink\" title=\"INNER JOIN\"></a>INNER JOIN</h3><p>内连接 又称为EQUIJOIN 等值连接</p>\n<ul>\n<li>内连接就是取两个表的交集，返回的结果就是连接的两张表中都满足条件的部分</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table2<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column2<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table1<span class=\"token punctuation\">`</span></span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">INNER</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">JOIN</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table2<span class=\"token punctuation\">`</span></span> <span class=\"token comment\"># INNER 可省略不写</span>\n<span class=\"token keyword\">ON</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>common_field<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">=</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table2<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>common_field<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># ON CONDITION</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># exp</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>c<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>c<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">AS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>course_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>t<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">AS</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>teacher_email<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>courses<span class=\"token punctuation\">`</span></span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>c<span class=\"token punctuation\">`</span></span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">INNER</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">JOIN</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>teachers<span class=\"token punctuation\">`</span></span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>t<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">ON</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>c<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>teacher_id<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">=</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>t<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li><code>courses</code> <code>c</code> 等同于 <code>courses</code> AS <code>c</code> ，给<code>courses</code> 表取别名为 <code>c</code></li>\n</ul>\n<h3 id=\"OUTER-JOIN\"><a href=\"#OUTER-JOIN\" class=\"headerlink\" title=\"OUTER JOIN\"></a>OUTER JOIN</h3><p>外连接 分为左外连接 右外连接 全外连接</p>\n<ul>\n<li>外连接可以将某个表格中，在另外一张表格中无对应关系，但是也能将数据匹配出来</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> column_name <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>column_name <span class=\"token number\">2</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> column_name n\n    <span class=\"token keyword\">FROM</span> table1\n        <span class=\"token keyword\">LEFT</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">RIGHT</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">FULL</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">OUTER</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">JOIN</span> table2\n        <span class=\"token keyword\">ON</span> CONDITION<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>LEFT JOIN : 以左表为参考表，返回左表中的所有记录，加上右表中匹配到的记录</li>\n<li>RIGHT JOIN :  以右表为参考表</li>\n<li>FULL JOIN : 只要左表和右表其中一个表中存在匹配，则返回行</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>tips :  MySQL 数据库不支持全连接，想要实现全连接可以使用 UNION ALL 来将左连接和右连接结果组合在一起实现全连接</p></blockquote>\n<ul>\n<li>UNION :  联合，把两次或多次查询结果合并起来<ul>\n<li>要求：两次查询的列数必须一致，同时，每条 SELECT 语句中的列的顺序必须相同</li>\n<li>UNION 会去掉重复的行。 如果不想去掉重复的行，可以使用 UNION ALL </li>\n<li>如果子句中有 order by , limit，需用括号()包起来。推荐放到所有子句之后，即对最终合并的结果来排序或筛选</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> column_name <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>column_name <span class=\"token number\">2</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> column_name n\n    <span class=\"token keyword\">FROM</span> table1\n        <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> table2 <span class=\"token keyword\">ON</span> CONDITION \n<span class=\"token keyword\">UNION</span>\n<span class=\"token keyword\">SELECT</span> column_name <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>column_name <span class=\"token number\">2</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> column_name n\n    <span class=\"token keyword\">FROM</span> table1\n        <span class=\"token keyword\">RIGHT</span> <span class=\"token keyword\">JOIN</span> table2 <span class=\"token keyword\">ON</span> CONDITION <span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"CROSS-JOIN\"><a href=\"#CROSS-JOIN\" class=\"headerlink\" title=\"CROSS JOIN\"></a>CROSS JOIN</h3><p>交叉连接 结果也称作笛卡尔积</p>\n<ul>\n<li>返回左表中的所有行，左表中的每一行与右表中的所有行组合。即将两个表的数据一一对应，其查询结果的行数为左表中的行数乘以右表中的行数。</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 隐式连接 不需要使用 CROSS JOIN 关键字</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table2<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column2<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>table2<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 显式连接</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column1<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table2<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column2<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table1<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">CROSS</span> <span class=\"token keyword\">JOIN</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table2<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>通过增加联结条件，使用 WHERE 子句帮助筛选过滤无效的数据</li>\n</ul>\n<hr>\n<h2 id=\"Advanced-Select\"><a href=\"#Advanced-Select\" class=\"headerlink\" title=\"Advanced Select\"></a>Advanced Select</h2><h3 id=\"分组查询\"><a href=\"#分组查询\" class=\"headerlink\" title=\"分组查询\"></a>分组查询</h3><ul>\n<li><p>GROUP BY 子句</p>\n<ul>\n<li>对同类的数据进行分类</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> aggregate_function<span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> operator <span class=\"token keyword\">value</span>\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>HAVING 子句</p>\n<ul>\n<li>使用 WHERE 条件子句时不能与聚合函数联合使用</li>\n<li> HAVING 子句经常与 GROUP BY 联合使用，HAVING 子句就是对分组统计函数进行过滤的子句</li>\n<li>HAVING 子句对于 GROUP BY 子句设置条件的方式其实与 WHERE 子句与 SELECT 的方式类似，语法相近，但 WHERE 子句搜索条件是在分组操作之前，而 HAVING 则是在之后</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>   <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> aggregate_function<span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">FROM</span>     <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span> \n<span class=\"token keyword\">WHERE</span>    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> operator <span class=\"token keyword\">value</span> \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> \n<span class=\"token keyword\">HAVING</span>   aggregate_function<span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> operator <span class=\"token keyword\">value</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>ex: 查询教师表 teachers计算不同国籍教师的平均年龄和所有教师的平均年龄，比较两者的大小，最后返回大于所有教师平均年龄的不同国籍下的全部教师信息</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\"># 子查询</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> teachers \n    <span class=\"token keyword\">WHERE</span> country <span class=\"token operator\">IN</span>\n        <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> country <span class=\"token keyword\">FROM</span> teachers <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> country\n            <span class=\"token keyword\">HAVING</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> teachers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"子查询-Base\"><a href=\"#子查询-Base\" class=\"headerlink\" title=\"子查询(Base)\"></a>子查询(Base)</h3><ul>\n<li>SELECT 语句中的子查询</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name(s)<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> OPERATOR <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name(s)<span class=\"token punctuation\">`</span></span>\n    <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>INSERT 语句中的子查询</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n\t<span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>colnum_name(s)<span class=\"token punctuation\">`</span></span>\n\t<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n\t<span class=\"token punctuation\">[</span> <span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">VALUE</span> OPERATOR <span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>UPDATE 语句中的子查询</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span> \n<span class=\"token keyword\">SET</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> <span class=\"token operator\">=</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>new_value<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> OPERATOR \n   <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span>\n   <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n   <span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>DELETE 语句中的子查询</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> OPERATOR \n   <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span>\n   <span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>  \n   <span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"子查询-Adv\"><a href=\"#子查询-Adv\" class=\"headerlink\" title=\"子查询(Adv.)\"></a>子查询(Adv.)</h3><ul>\n<li><p>内联视图子查询</p>\n<ul>\n<li>将查询的结果集作为一个查询表，继续进行查询操作</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> xxxx\n<span class=\"token punctuation\">)</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>T<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">WHERE</span> xxx <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token keyword\">SELECT</span> xxxx\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>IN 操作符的多行子查询 / NOT IN </p>\n</li>\n<li><p>ANY 操作符的多行子查询</p>\n<ul>\n<li>在子查询中使用 ANY ，表示与子查询返回的任何值比较为真，则返回真</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name(s)<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">FROM</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>table_name<span class=\"token punctuation\">`</span></span>\n<span class=\"token keyword\">WHERE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>column_name<span class=\"token punctuation\">`</span></span> OPERATOR\n   <span class=\"token keyword\">ANY</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> column_name\n   <span class=\"token keyword\">FROM</span> table_name<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>ALL 操作符的多行子查询</p>\n<ul>\n<li>在子查询中使用 ALL ，表示与子查询返回的所有值比较为真，则返回真</li>\n</ul>\n</li>\n<li><p>多列子查询</p>\n</li>\n<li><p>HAVING 子句中的子查询</p>\n</li>\n</ul>\n","text":"SQL结构化查询语言-Structured Query Language @author：Maskros Type类型 字符型 VARCHAR型和CHAR型 文本型 TEXT 数值型 整数INT 、小数NUMERIC、钱数MONEY) 逻辑型 BIT 日期型 DATETIME O...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"NOTE","slug":"NOTE","count":5,"path":"api/categories/NOTE.json"}],"tags":[{"name":"note","slug":"note","count":10,"path":"api/tags/note.json"},{"name":"sql","slug":"sql","count":1,"path":"api/tags/sql.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SQL\"><span class=\"toc-text\">SQL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Type\"><span class=\"toc-text\">Type</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Operation\"><span class=\"toc-text\">Operation</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SELECT-FROM\"><span class=\"toc-text\">SELECT(FROM)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#INSERT-INTO\"><span class=\"toc-text\">INSERT(INTO)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#UPDATE-SET\"><span class=\"toc-text\">UPDATE(SET)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DELETE-FROM\"><span class=\"toc-text\">DELETE(FROM)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Condition\"><span class=\"toc-text\">Condition</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">比较运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">逻辑运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%AE%8A%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">特殊条件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ORDER-BY-amp-LIMIT\"><span class=\"toc-text\">ORDER BY &amp; LIMIT</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Function\"><span class=\"toc-text\">Function</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%95%B0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">算数函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%97%B6%E9%97%B4%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">时间函数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Constraints\"><span class=\"toc-text\">Constraints</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#NOT-NULL\"><span class=\"toc-text\">NOT NULL</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#UNIQUE\"><span class=\"toc-text\">UNIQUE</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PRIMARY-KEY\"><span class=\"toc-text\">PRIMARY KEY</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#FOREIGN-KEY\"><span class=\"toc-text\">FOREIGN KEY</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CHECK\"><span class=\"toc-text\">CHECK</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DEFAULT\"><span class=\"toc-text\">DEFAULT</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Join\"><span class=\"toc-text\">Join</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%81%94%E7%BB%93\"><span class=\"toc-text\">联结</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#INNER-JOIN\"><span class=\"toc-text\">INNER JOIN</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#OUTER-JOIN\"><span class=\"toc-text\">OUTER JOIN</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CROSS-JOIN\"><span class=\"toc-text\">CROSS JOIN</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Advanced-Select\"><span class=\"toc-text\">Advanced Select</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">分组查询</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%90%E6%9F%A5%E8%AF%A2-Base\"><span class=\"toc-text\">子查询(Base)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%90%E6%9F%A5%E8%AF%A2-Adv\"><span class=\"toc-text\">子查询(Adv.)</span></a></li></ol></li></ol></li></ol>","author":{"name":"Maskros","slug":"blog-author","avatar":"/img/logo_Maskros.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"https://github.com/Maskros-new","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"iconfont icon-bilibili-line","link":"https://space.bilibili.com/355516889"},"codeforces":{"icon":"iconfont icon-codeforces","link":"https://codeforces.com/profile/1ronMaker"},"mail":{"icon":"iconfont icon-mail","link":"mailto:1164528260@qq.com"}}}},"mapped":true,"prev_post":{"title":"博弈论","uid":"1f59b3eb6e524ce1c0f6b34920ea6c38","slug":"algorithm/learn/博弈论","date":"2021-07-31T01:51:28.000Z","updated":"2022-01-22T09:45:47.616Z","comments":true,"path":"api/articles/algorithm/learn/博弈论.json","keywords":null,"cover":"http://img.mp.itc.cn/upload/20160916/f7f2d7ebe46b4a49ae4bd4baf8e30044_th.png","text":"博弈论Game Theory Nim游戏属于 ICG (Impartial Combinatorial Games) 的一种，满足条件如下： 两名选手交替移动，在有限的合法移动集合中任选一种进行移动 对于任何一种局面，合法的移动集合只取决于局面本身 到谁无法移动谁就输了 以下给出...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"ALGORITHMS","slug":"ALGORITHMS","count":5,"path":"api/categories/ALGORITHMS.json"}],"tags":[{"name":"ACM","slug":"ACM","count":16,"path":"api/tags/ACM.json"},{"name":"note","slug":"note","count":10,"path":"api/tags/note.json"},{"name":"algorithm","slug":"algorithm","count":7,"path":"api/tags/algorithm.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"/img/logo_Maskros.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"https://github.com/Maskros-new","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"iconfont icon-bilibili-line","link":"https://space.bilibili.com/355516889"},"codeforces":{"icon":"iconfont icon-codeforces","link":"https://codeforces.com/profile/1ronMaker"},"mail":{"icon":"iconfont icon-mail","link":"mailto:1164528260@qq.com"}}}}},"next_post":{"title":"竞赛记录","uid":"0308df9afb3678486e587f2739f6cf31","slug":"life/竞赛记录","date":"2019-08-24T16:00:01.000Z","updated":"2022-01-23T05:06:44.118Z","comments":true,"path":"api/articles/life/竞赛记录.json","keywords":null,"cover":null,"text":"竞赛记录 = 打铁记录 2020.10 CCPC威海打铁2020.10.17 蓝桥省二打铁2020.11 华为杯校赛三等2020.12 ICPC南京线上赛打铁2021.3 ICPC山东省赛打铁 这也能铁？纯废物 2021.5.16 ICPC银川现场赛打铁 阅读签到WA32，卡行末...","link":"","photos":[],"count_time":{"symbolsCount":336,"symbolsTime":"1 mins."},"categories":[{"name":"LIFE","slug":"LIFE","count":2,"path":"api/categories/LIFE.json"}],"tags":[{"name":"ACM","slug":"ACM","count":16,"path":"api/tags/ACM.json"},{"name":"Life","slug":"Life","count":2,"path":"api/tags/Life.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"/img/logo_Maskros.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"https://github.com/Maskros-new","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"iconfont icon-bilibili-line","link":"https://space.bilibili.com/355516889"},"codeforces":{"icon":"iconfont icon-codeforces","link":"https://codeforces.com/profile/1ronMaker"},"mail":{"icon":"iconfont icon-mail","link":"mailto:1164528260@qq.com"}}}}}}