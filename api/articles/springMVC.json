{"title":"SpringMVC学习杂记","uid":"ebad22b2d3ed9cce7b0eb0ed467a5511","slug":"springMVC","date":"2021-09-15T18:37:28.000Z","updated":"2022-01-22T09:37:58.349Z","comments":true,"path":"api/articles/springMVC.json","keywords":null,"cover":"https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2021%2F0803%2Fe7e5645ep00qx8udl000vc000dc007im.png&thumbnail=650x2147483647&quality=80&type=jpg","content":"<h1 id=\"SpringMVC学习杂记\"><a href=\"#SpringMVC学习杂记\" class=\"headerlink\" title=\"SpringMVC学习杂记\"></a>SpringMVC学习杂记</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注：杂记即为看到啥记啥 毫无章法 乱jb记</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>常见的服务器端MVC框架有：Struts、Spring MVC、ASP.NET MVC、Zend Framework、JSF；常见前端MVC框架：vue、angularjs、react、backbone；由MVC演化出了另外一些模式如：MVP、MVVM 等等</p></blockquote>\n<h2 id=\"Spring\"><a href=\"#Spring\" class=\"headerlink\" title=\"Spring\"></a>Spring</h2><p>Spring 是最受欢迎的企业级 Java 应用程序开发的轻量级框架</p>\n<p>Spring 框架的核心特性是可以用于开发任何 Java 应用程序，但是在 Java EE 平台上构建 web 应用程序是需要扩展的。 Spring 框架的目标是使 J2EE 开发变得更容易使用，通过启用基于 POJO 编程模型来促进良好的编程实践</p>\n<h3 id=\"三层架构\"><a href=\"#三层架构\" class=\"headerlink\" title=\"三层架构\"></a>三层架构</h3><ul>\n<li><p>表现层  web层  MVC是表现层的一个设计模型 </p>\n</li>\n<li><p>业务层  service层</p>\n</li>\n<li><p>持久层  dao层</p>\n</li>\n</ul>\n<h3 id=\"优良特性\"><a href=\"#优良特性\" class=\"headerlink\" title=\"优良特性\"></a>优良特性</h3><ul>\n<li>非侵入式：基于Spring开发的应用中的对象可以不依赖于Spring的API</li>\n<li>控制反转：IOC——Inversion of Control，指的是将对象的创建权交给 Spring 去创建。使用 Spring 之前，对象的创建都是由我们自己在代码中new创建。而使用 Spring 之后。对象的创建都是给了 Spring 框架。</li>\n<li>依赖注入：DI——Dependency Injection，是指依赖的对象不需要手动调用 setXX 方法去设置，而是通过配置赋值。</li>\n<li>面向切面编程：Aspect Oriented Programming——AOP</li>\n<li>容器：Spring 是一个容器，因为它包含并且管理应用对象的生命周期</li>\n<li>组件化：Spring 实现了使用简单的组件配置组合成一个复杂的应用。在 Spring 中可以使用XML和Java注解组合这些对象。</li>\n<li>一站式：在 IOC 和 AOP 的基础上可以整合各种企业应用的开源框架和优秀的第三方类库（实际上 Spring 自身也提供了表现层的 SpringMVC 和持久层的 Spring JDBC）</li>\n</ul>\n<h3 id=\"体系结构\"><a href=\"#体系结构\" class=\"headerlink\" title=\"体系结构\"></a>体系结构</h3><p><img src=\"https://images.weserv.nl/?url=https://i0.hdslb.com/bfs/album/c9159efce03899c144f5fd357785a4eba6956568.png\" alt=\"img\"></p>\n<h2 id=\"MVC职责分析\"><a href=\"#MVC职责分析\" class=\"headerlink\" title=\"MVC职责分析\"></a>MVC职责分析</h2><ul>\n<li><p>Controller：控制器</p>\n<ul>\n<li>取得表单数据</li>\n<li>调用业务逻辑</li>\n<li>转向指定的页面</li>\n</ul>\n</li>\n<li><p>Model：模型</p>\n<ul>\n<li>业务逻辑</li>\n<li>保存数据的状态</li>\n</ul>\n</li>\n<li><p>View：视图</p>\n<ul>\n<li>显示页面</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p>MVC框架需要做哪些事情：</p>\n<ol>\n<li><p>将url映射到java类或java类的方法 .</p>\n</li>\n<li><p>封装用户提交的数据 .</p>\n</li>\n<li><p>处理请求–调用相关的业务处理–封装响应数据 .</p>\n</li>\n<li><p>将响应的数据进行渲染 . jsp / html 等表示层数据 .</p>\n</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"Servlet\"><a href=\"#Servlet\" class=\"headerlink\" title=\"Servlet\"></a>Servlet</h2><p>jsp：本质就是一个servlet</p>\n<ol>\n<li><p>添加pom依赖</p>\n</li>\n<li><p>新建空Maven项目</p>\n</li>\n<li><p>Add Framework Support 选择Web Application添加 变成web项目 </p>\n</li>\n<li><p>导入servlet和jsp的依赖</p>\n</li>\n<li><p>编写一个Servlet类，用来处理用户的请求</p>\n</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloServlet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpServlet</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol start=\"6\">\n<li>在WEB-INF目录下新建一个jsp的文件夹，新建test.jsp</li>\n<li>在web.xml中注册Servlet</li>\n<li>配置Tomcat 并启动测试</li>\n</ol>\n<h2 id=\"SpringMVC\"><a href=\"#SpringMVC\" class=\"headerlink\" title=\"SpringMVC\"></a>SpringMVC</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Spring MVC是Spring Framework的一部分，是基于Java实现MVC的轻量 级Web框架</p></blockquote>\n<p> Spring MVC的特点：</p>\n<ol>\n<li>轻量级，简单易学</li>\n<li>高效 , 基于请求响应的MVC框架</li>\n<li>与Spring兼容性好，无缝结合</li>\n<li>约定优于配置</li>\n<li>功能强大：RESTful、数据验证、格式化、本地化、主题等</li>\n<li>简洁灵活</li>\n</ol>\n<p>Spring的web框架围绕<strong>DispatcherServlet</strong> [ 调度Servlet ] 设计</p>\n<p>DispatcherServlet的作用是将请求分发到不同的处理器。从Spring 2.5开始，使用Java 5或者以上版本的用户可以采用基于注解形式进行开发，十分简洁</p>\n<h3 id=\"中心控制器\"><a href=\"#中心控制器\" class=\"headerlink\" title=\"中心控制器\"></a>中心控制器</h3><p>Spring MVC框架以请求为驱动 , 围绕一个中心Servlet分派请求及提供其他功能，DispatcherServlet是一个实际的Servlet (它继承自HttpServlet 基类)。</p>\n<p>SpringMVC的原理如下图所示：</p>\n<p>​    当发起请求时被前置的控制器拦截到请求，根据请求参数生成代理请求，找到请求对应的实际控制器，控制器处理请求，创建数据模型，访问数据库，将模型响应给中心控制器，控制器使用模型与视图渲染视图结果，将结果返回给中心控制器，再将结果返回给请求者。</p>\n<p><img src=\"https://images.weserv.nl/?url=https://i0.hdslb.com/bfs/album/d3318d96dfdee2ee58b6bee91fde63570542aeb8.png\" alt=\"img\"></p>\n<h3 id=\"SpringMVC执行原理\"><a href=\"#SpringMVC执行原理\" class=\"headerlink\" title=\"SpringMVC执行原理\"></a>SpringMVC执行原理</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>图为SpringMVC的一个较完整的流程图，实线表示SpringMVC框架提供的技术，不需要开发者实现，虚线表示需要开发者实现</p></blockquote>\n<p><img src=\"https://images.weserv.nl/?url=https://i0.hdslb.com/bfs/album/825f31d6c644d7b4d5c7a270d3c5244f93282738.png\" alt=\"img\"></p>\n<ol>\n<li><p>DispatcherServlet表示前置控制器，是整个SpringMVC的控制中心。用户发出请求，DispatcherServlet接收请求并拦截请求。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>我们假设请求的url为 : <a href=\"http://localhost:8080/SpringMVC/hello\">http://localhost:8080/SpringMVC/hello</a></p>\n<p>如上url拆分成三部分：</p>\n<p><a href=\"http://localhost:8080/\">http://localhost:8080</a> 服务器域名</p>\n<p>SpringMVC部署在服务器上的web站点</p>\n<p>hello表示控制器</p>\n<p>通过分析，如上url表示为：请求位于服务器localhost:8080上的SpringMVC站点的hello控制器。</p></blockquote>\n</li>\n<li><p>HandlerMapping为处理器映射。DispatcherServlet调用HandlerMapping,HandlerMapping根据请求url查找Handler。</p>\n</li>\n<li><p>HandlerExecution表示具体的Handler,其主要作用是根据url查找控制器，如上url被查找控制器为：hello。</p>\n</li>\n<li><p>HandlerExecution将解析后的信息传递给DispatcherServlet,如解析控制器映射等。</p>\n</li>\n<li><p>HandlerAdapter表示处理器适配器，其按照特定的规则去执行Handler。</p>\n</li>\n<li><p>Handler让具体的Controller执行。</p>\n</li>\n<li><p>Controller将具体的执行信息返回给HandlerAdapter,如ModelAndView。</p>\n</li>\n<li><p>HandlerAdapter将视图逻辑名或模型传递给DispatcherServlet。</p>\n</li>\n<li><p>DispatcherServlet调用视图解析器(ViewResolver)来解析HandlerAdapter传递的逻辑视图名。</p>\n</li>\n<li><p>视图解析器将解析的逻辑视图名传给DispatcherServlet。</p>\n</li>\n<li><p>DispatcherServlet根据视图解析器解析的视图结果，调用具体的视图。</p>\n</li>\n<li><p>最终视图呈现给用户。</p>\n</li>\n</ol>\n<h3 id=\"配置版\"><a href=\"#配置版\" class=\"headerlink\" title=\"配置版\"></a>配置版</h3><ol>\n<li><p>配置web.xml  ， 注册DispatcherServlet</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>web-app</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xmlns.jcp.org/xml/ns/javaee<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n   <span class=\"token comment\">&lt;!--1.注册DispatcherServlet--></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>springmvc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>org.springframework.web.servlet.DispatcherServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token comment\">&lt;!--关联一个springmvc的配置文件:【servlet-name】-servlet.xml--></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>init-param</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-name</span><span class=\"token punctuation\">></span></span>contextConfigLocation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-name</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-value</span><span class=\"token punctuation\">></span></span>classpath:springmvc-servlet.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-value</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>init-param</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token comment\">&lt;!--启动级别-1--></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>load-on-startup</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>load-on-startup</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n\n   <span class=\"token comment\">&lt;!--/ 匹配所有的请求；（不包括.jsp）--></span>\n   <span class=\"token comment\">&lt;!--/* 匹配所有的请求；（包括.jsp）--></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>springmvc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>web-app</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>编写SpringMVC 的 配置文件！名称：springmvc-servlet.xml  : [servletname]-servlet.xml</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>添加 处理映射器</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>添加 处理器适配器</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>添加 视图解析器</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!--视图解析器:DispatcherServlet给他的ModelAndView--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>InternalResourceViewResolver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n   <span class=\"token comment\">&lt;!--前缀--></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prefix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/WEB-INF/jsp/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n   <span class=\"token comment\">&lt;!--后缀--></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>suffix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.jsp<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>编写我们要操作业务Controller ，要么实现Controller接口，要么增加注解；需要返回一个ModelAndView，装数据，封视图；</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>maskros<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ModelAndView</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>mvc<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletResponse</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//注意：这里我们先导入Controller接口</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Controller</span> <span class=\"token punctuation\">&#123;</span>\n\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">ModelAndView</span> <span class=\"token function\">handleRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token comment\">//ModelAndView 模型和视图</span>\n       <span class=\"token class-name\">ModelAndView</span> mv <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModelAndView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n       <span class=\"token comment\">//封装对象，放在ModelAndView中。Model</span>\n       mv<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"HelloSpringMVC!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//封装要跳转的视图，放在ModelAndView中</span>\n       mv<span class=\"token punctuation\">.</span><span class=\"token function\">setViewName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//: /WEB-INF/jsp/hello.jsp</span>\n       <span class=\"token keyword\">return</span> mv<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n   \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>将自己的类交给SpringIOC容器，注册bean</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!--Handler--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/hello<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.kuang.controller.HelloController<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>写要跳转的jsp页面，显示ModelandView存放的数据，以及我们的正常页面；</p>\n<pre class=\"line-numbers language-jsp\" data-language=\"jsp\"><code class=\"language-jsp\">&lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot; language&#x3D;&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n   &lt;title&gt;Kuangshen&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n$&#123;msg&#125;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>配置tomcat启动测试</p>\n</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>可能遇到的问题：访问出现404，排查步骤：</strong></p>\n<ol>\n<li>查看控制台输出，看一下是不是缺少了什么jar包。</li>\n<li>如果jar包存在，显示无法输出，<strong>就在IDEA的项目发布中，添加lib依赖</strong>！</li>\n</ol></blockquote>\n<hr>\n<h3 id=\"※注解版\"><a href=\"#※注解版\" class=\"headerlink\" title=\"※注解版\"></a>※注解版</h3><ol>\n<li><p>由于Maven可能存在资源过滤的问题，我们将配置完善</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resources</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resource</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>directory</span><span class=\"token punctuation\">></span></span>src/main/java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>directory</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>includes</span><span class=\"token punctuation\">></span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span><span class=\"token punctuation\">></span></span>**/*.properties<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>include</span><span class=\"token punctuation\">></span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span><span class=\"token punctuation\">></span></span>**/*.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>include</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>includes</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filtering</span><span class=\"token punctuation\">></span></span>false<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filtering</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resource</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>resource</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>directory</span><span class=\"token punctuation\">></span></span>src/main/resources<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>directory</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>includes</span><span class=\"token punctuation\">></span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span><span class=\"token punctuation\">></span></span>**/*.properties<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>include</span><span class=\"token punctuation\">></span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span><span class=\"token punctuation\">></span></span>**/*.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>include</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>includes</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>filtering</span><span class=\"token punctuation\">></span></span>false<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>filtering</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resource</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>resources</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>在pom.xml文件引入相关的依赖：主要有Spring框架核心库、Spring MVC、servlet , JSTL等。我们在父依赖中已经引入</p>\n</li>\n<li><p>配置 web.xml</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>web-app</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xmlns.jcp.org/xml/ns/javaee<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>4.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n   <span class=\"token comment\">&lt;!--1.注册servlet--></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>SpringMVC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-class</span><span class=\"token punctuation\">></span></span>org.springframework.web.servlet.DispatcherServlet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-class</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token comment\">&lt;!--通过初始化参数指定SpringMVC配置文件的位置，进行关联--></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>init-param</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-name</span><span class=\"token punctuation\">></span></span>contextConfigLocation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-name</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-value</span><span class=\"token punctuation\">></span></span>classpath:springmvc-servlet.xml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-value</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>init-param</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token comment\">&lt;!-- 启动顺序，数字越小，启动越早 --></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>load-on-startup</span><span class=\"token punctuation\">></span></span>1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>load-on-startup</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet</span><span class=\"token punctuation\">></span></span>\n\n   <span class=\"token comment\">&lt;!--所有请求都会被springmvc拦截 --></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>servlet-name</span><span class=\"token punctuation\">></span></span>SpringMVC<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-name</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>servlet-mapping</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>web-app</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>/ 和 /* 的区别：</strong>&lt; url-pattern &gt; / &lt;/ url-pattern &gt; 不会匹配到.jsp， 只针对我们编写的请求；即：.jsp 不会进入spring的 DispatcherServlet类 。&lt; url-pattern &gt; /* &lt;/ url-pattern &gt; 会匹配 *.jsp，会出现返回 jsp视图 时再次进入spring的DispatcherServlet 类，导致找不到对应的controller所以报404错</p></blockquote>\n</li>\n<li><p>添加 SpringMVC 配置文件</p>\n<p>在resource目录下添加springmvc-servlet.xml配置文件，配置的形式与Spring容器配置基本类似，为了支持基于注解的IOC，设置了自动扫描包的功能，在视图解析器中我们把所有的视图都存放在/WEB-INF/目录下，这样可以保证视图安全，因为这个目录下的文件，客户端不能直接访问</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>beans</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>context</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/context<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mvc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/mvc<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://www.springframework.org/schema/context\n       https://www.springframework.org/schema/context/spring-context.xsd\n       http://www.springframework.org/schema/mvc\n       https://www.springframework.org/schema/mvc/spring-mvc.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n   <span class=\"token comment\">&lt;!-- 自动扫描包，让指定包下的注解生效,由IOC容器统一管理 --></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>component-scan</span> <span class=\"token attr-name\">base-package</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.kuang.controller<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n   <span class=\"token comment\">&lt;!-- 让Spring MVC不处理静态资源 --></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>default-servlet-handler</span> <span class=\"token punctuation\">/></span></span>\n   <span class=\"token comment\">&lt;!--\n   支持mvc注解驱动\n       在spring中一般采用@RequestMapping注解来完成映射关系\n       要想使@RequestMapping注解生效\n       必须向上下文中注册DefaultAnnotationHandlerMapping\n       和一个AnnotationMethodHandlerAdapter实例\n       这两个实例分别在类级别和方法级别处理。\n       而annotation-driven配置帮助我们自动完成上述两个实例的注入。\n    --></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>annotation-driven</span> <span class=\"token punctuation\">/></span></span>\n\n   <span class=\"token comment\">&lt;!-- 视图解析器 --></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.web.servlet.view.InternalResourceViewResolver<span class=\"token punctuation\">\"</span></span>\n         <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>internalResourceViewResolver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       <span class=\"token comment\">&lt;!-- 前缀 --></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prefix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/WEB-INF/jsp/<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n       <span class=\"token comment\">&lt;!-- 后缀 --></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>suffix<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.jsp<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>beans</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>创建 Contronller</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>@Controller是为了让Spring IOC容器初始化时自动扫描到；</li>\n<li>@RequestMapping是为了映射请求路径，这里因为类与方法上都有映射所以访问时应该是/HelloController/hello；</li>\n<li>方法中声明Model类型的参数是为了把Action中的数据带到视图中；</li>\n<li>方法返回的结果是视图的名称hello，加上配置文件中的前后缀变成WEB-INF/jsp/<strong>hello</strong>.jsp。</li>\n</ul></blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 编写控制类</span>\n<span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>kuang<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Model</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/HelloController\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token punctuation\">&#123;</span>\n\n   <span class=\"token comment\">//真实访问地址 : 项目名/HelloController/hello</span>\n   <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Model</span> model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       <span class=\"token comment\">//向模型中添加属性msg与值，可以在JSP页面中取出并渲染</span>\n       model<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hello,SpringMVC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//web-inf/jsp/hello.jsp</span>\n       <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>创建视图层</p>\n<p>在WEB-INF/ jsp目录中创建hello.jsp ， 视图可以直接取出并展示从Controller带回的信息</p>\n<pre class=\"line-numbers language-jsp\" data-language=\"jsp\"><code class=\"language-jsp\">&lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot; language&#x3D;&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n   &lt;title&gt;SpringMVC&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n$&#123;msg&#125;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>配置 Tomcat 运行</p>\n</li>\n</ol>\n<hr>\n<p>使用springMVC必须配置的三大件：</p>\n<p><strong>处理器映射器、处理器适配器、视图解析器</strong></p>\n<p>通常，我们只需要<strong>手动配置视图解析器</strong>，而<strong>处理器映射器</strong>和<strong>处理器适配器</strong>只需要开启<strong>注解驱动</strong>即可，而省去了大段的xml配置</p>\n<h3 id=\"控制器和RestFul\"><a href=\"#控制器和RestFul\" class=\"headerlink\" title=\"控制器和RestFul\"></a>控制器和RestFul</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>控制器复杂提供访问应用程序的行为，通常通过接口定义或注解定义两种方法实现。</p>\n<p>控制器负责解析用户的请求并将其转换为一个模型。</p>\n<p>在Spring MVC中一个控制器类可以包含多个方法</p>\n<p>在Spring MVC中，对于Controller的配置方式有很多种，一般<strong>使用注解@Controller</strong></p></blockquote>\n<h4 id=\"实现Controller接口\"><a href=\"#实现Controller接口\" class=\"headerlink\" title=\"实现Controller接口\"></a>实现Controller接口</h4><ul>\n<li><p>mvc的配置文件只留下 视图解析器</p>\n</li>\n<li><p>ControllerTest1</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//定义控制器</span>\n<span class=\"token comment\">//注意点：不要导错包，实现Controller接口，重写方法；</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ControllerTest1</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Controller</span> <span class=\"token punctuation\">&#123;</span>\n\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">ModelAndView</span> <span class=\"token function\">handleRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> httpServletRequest<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> httpServletResponse<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token comment\">//返回一个模型视图对象</span>\n       <span class=\"token class-name\">ModelAndView</span> mv <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModelAndView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       mv<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Test1Controller\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       mv<span class=\"token punctuation\">.</span><span class=\"token function\">setViewName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">return</span> mv<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>编写完毕后，去Spring配置文件中注册请求的bean；name对应请求路径，class对应处理请求的类</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/t1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.maskros.controller.ControllerTest1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>编写前端test.jsp</p>\n<pre class=\"line-numbers language-jsp\" data-language=\"jsp\"><code class=\"language-jsp\">&lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot; language&#x3D;&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n   &lt;title&gt;Kuangshen&lt;&#x2F;title&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n$&#123;msg&#125;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<hr>\n<ul>\n<li>实现接口Controller定义控制器是较老的办法</li>\n<li>缺点是：一个控制器中只有一个方法，如果要多个方法则需要定义多个Controller；定义的方式比较麻烦；</li>\n</ul>\n<h4 id=\"使用注解-Controller\"><a href=\"#使用注解-Controller\" class=\"headerlink\" title=\"使用注解@Controller\"></a>使用注解@Controller</h4><ul>\n<li><p>@Controller注解类型用于声明Spring类的实例是一个控制器（在讲IOC时还提到了另外3个注解）；</p>\n</li>\n<li><p>Spring可以使用扫描机制来找到应用程序中所有基于注解的控制器类，为了保证Spring能找到你的控制器，需要在配置文件中声明组件扫描。</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- 自动扫描指定的包，下面所有注解类交给IOC容器管理 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">context:</span>component-scan</span> <span class=\"token attr-name\">base-package</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.kuang.controller<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>增加一个ControllerTest2类，使用注解实现</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//@Controller注解的类会自动添加到Spring上下文中</span>\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ControllerTest2</span><span class=\"token punctuation\">&#123;</span>\n\n   <span class=\"token comment\">//映射访问路径</span>\n   <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/t2\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Model</span> model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       <span class=\"token comment\">//Spring MVC会自动实例化一个Model对象用于向视图中传值</span>\n       model<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ControllerTest2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//返回视图位置</span>\n       <span class=\"token keyword\">return</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>可以发现，我们的两个请求都可以指向一个视图，但是页面结果的结果是不一样的，从这里可以看出视图是被复用的，而控制器与视图之间是弱偶合关系。</p></blockquote>\n<h4 id=\"RequestMapping-使用\"><a href=\"#RequestMapping-使用\" class=\"headerlink\" title=\"@RequestMapping 使用\"></a>@RequestMapping 使用</h4><ul>\n<li>@RequestMapping注解用于映射url到控制器类或一个特定的处理程序方法。可用于类或方法上。用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 只注解在方法上面</span>\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestController</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/h1\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">return</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//访问路径：http://localhost:8080 / 项目名 / h1</span>\n\n<span class=\"token comment\">// 同时注解类与方法@Controller</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/admin\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestController</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/h1\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">return</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//访问路径：http://localhost:8080 / 项目名/ admin /h1 </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"RestFul风格\"><a href=\"#RestFul风格\" class=\"headerlink\" title=\"RestFul风格\"></a>RestFul风格</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Restful就是一个资源定位及资源操作的风格。不是标准也不是协议，只是一种风格。基于这个风格设计的软件可以更简洁，更有层次，更易于实现缓存等机制。localhost:8080/a/b/c/d/……</p></blockquote>\n<p>在Spring MVC中可以使用  @PathVariable 注解，让方法参数的值对应绑定到一个URI模板变量上</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RestFulController</span> <span class=\"token punctuation\">&#123;</span>\n\n   <span class=\"token comment\">//映射访问路径</span>\n   <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/commit/&#123;p1&#125;/&#123;p2&#125;\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token keyword\">int</span> p1<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token keyword\">int</span> p2<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Model</span> model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       \n       <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> p1<span class=\"token operator\">+</span>p2<span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//Spring MVC会自动实例化一个Model对象用于向视图中传值</span>\n       model<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"结果：\"</span><span class=\"token operator\">+</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">//返回视图位置</span>\n       <span class=\"token keyword\">return</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">;</span>\n       \n  <span class=\"token punctuation\">&#125;</span>\n   \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>使用路径变量的好处？</p>\n<ol>\n<li><ul>\n<li>使路径变得更加简洁；</li>\n<li>获得参数更加方便，框架会自动进行类型转换。</li>\n<li>通过路径变量的类型可以约束访问参数，如果类型不一样，则访问不到对应的请求方法，如这里访问是的路径是/commit/1/a，则路径与方法不匹配，而不会是参数转换失败。</li>\n</ul>\n</li>\n</ol>\n<p><strong>使用method属性指定请求类型</strong></p>\n<p>用于约束请求的类型，可以收窄请求范围。指定请求谓词的类型如GET, POST, HEAD, OPTIONS, PUT, PATCH, DELETE, TRACE等</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//映射访问路径,必须是POST请求</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">,</span>method <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">index2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Model</span> model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   model<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// 我们使用浏览器地址栏进行访问默认是Get请求，会报错405</span>\n<span class=\"token comment\">// 如果将POST修改为GET则正常了</span>\n\n<span class=\"token comment\">//映射访问路径,必须是Get请求</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">,</span>method <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span>GET<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">index2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Model</span> model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n   model<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<p>Spring MVC 的 @RequestMapping 注解能够处理 HTTP 请求的方法, 比如 GET, PUT, POST, DELETE 以及 PATCH。\\</p>\n<p><strong>所有的地址栏请求默认都会是 HTTP GET 类型的</strong></p>\n<p>方法级别的注解变体有如下几个：组合注解</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@GetMapping</span>\n<span class=\"token annotation punctuation\">@PostMapping</span>\n<span class=\"token annotation punctuation\">@PutMapping</span>\n<span class=\"token annotation punctuation\">@DeleteMapping</span>\n<span class=\"token annotation punctuation\">@PatchMapping</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>@GetMapping</strong> 是一个组合注解，平时使用的会比较多, 它所扮演的是 @RequestMapping(method =RequestMethod.GET) 的一个快捷方式</p>\n<h3 id=\"数据处理和跳转\"><a href=\"#数据处理和跳转\" class=\"headerlink\" title=\"数据处理和跳转\"></a>数据处理和跳转</h3><p>转发 重定向</p>\n<p>接受请求参数以及数据回显</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//必须要求传这个参数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"Json\"><a href=\"#Json\" class=\"headerlink\" title=\"Json\"></a>Json</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>JavaScript Object Notation, JS 对象标记 是一种轻量级的数据交换格式，目前使用特别广泛，采用完全独立于编程语言的<strong>文本格式</strong>来存储和表示数据</p></blockquote>\n<ul>\n<li>@Controller：定义一个控制器类，</li>\n<li>@RestController： 注解相当于 @Controller ＋ @ResponseBody 合在一起的作用。</li>\n<li>@ResponseBody：标记Controller类中的方法。把return的结果变成<strong>JSON对象</strong>返回。</li>\n</ul>\n<p>语法格式：</p>\n<ul>\n<li>对象表示为键值对，数据由逗号分隔</li>\n<li>花括号保存对象</li>\n<li>方括号保存数组</li>\n</ul>\n<p><strong>JSON 键值对</strong>是用来保存 JavaScript 对象的一种方式，和 JavaScript 对象的写法也大同小异，键/值对组合中的键名写在前面并用双引号 “” 包裹，使用冒号 : 分隔，然后紧接着值</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"QinJiang\"</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#123;</span><span class=\"token property\">\"sex\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"男\"</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>Json 和 JavaScript 对象互转：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//从JSON字符串转换为JavaScript 对象</span>\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//从JavaScript 对象转换为JSON字符串</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h3 id=\"Controller返回Json数据\"><a href=\"#Controller返回Json数据\" class=\"headerlink\" title=\"Controller返回Json数据\"></a>Controller返回Json数据</h3><h4 id=\"Jackson使用\"><a href=\"#Jackson使用\" class=\"headerlink\" title=\"Jackson使用\"></a>Jackson使用</h4><p>导入它的jar包 配置SpringMVC</p>\n<p>编写Controller时需要运用到两个新东西：@ResponseBody，ObjectMapper对象</p>\n<p>乱码处理</p>\n<h4 id=\"FastJson使用\"><a href=\"#FastJson使用\" class=\"headerlink\" title=\"FastJson使用\"></a>FastJson使用</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> 阿里开发 方便的实现json对象与JavaBean对象的转换，实现JavaBean对象与json字符串的转换，实现json对象与json字符串的转换</p></blockquote>\n<h4 id=\"乱码问题\"><a href=\"#乱码问题\" class=\"headerlink\" title=\"乱码问题\"></a>乱码问题</h4><pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- Json乱码问题配置 --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>annotation-driven</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>message-converters</span> <span class=\"token attr-name\">register-defaults</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.http.converter.StringHttpMessageConverter<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>constructor-arg</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.http.converter.json.MappingJackson2HttpMessageConverter<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>objectMapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>failOnEmptyBeans<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n               <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span>\n           <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>bean</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">mvc:</span>message-converters</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">mvc:</span>annotation-driven</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"Ajax\"><a href=\"#Ajax\" class=\"headerlink\" title=\"Ajax\"></a>Ajax</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）</p>\n<p>Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术</p></blockquote>\n<ul>\n<li>可以通过 iframe 标签来伪造一个Ajax</li>\n<li><strong>利用AJAX可以做：</strong><ul>\n<li>注册时，输入用户名自动检测用户是否已经存在。</li>\n<li>登陆时，提示用户名密码错误</li>\n<li>删除数据行时，将行ID发送到后台，后台在数据库中删除，数据库删除成功后，在页面DOM中将数据行也删除。</li>\n<li>….</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"jQuery-ajax\"><a href=\"#jQuery-ajax\" class=\"headerlink\" title=\"jQuery.ajax\"></a>jQuery.ajax</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Ajax的核心是XMLHttpRequest对象(XHR)。XHR为向服务器发送请求和解析服务器响应提供了接口。能够以异步方式从服务器获取新数据</p>\n<p>jQuery是一个库，提供大量的JavaScript函数</p></blockquote>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">jQuery.ajax(...)\n      部分参数：\n            url：请求地址\n            type：请求方式，GET、POST（1.9.0之后用method）\n        headers：请求头\n            data：要发送的数据\n    contentType：即将发送信息至服务器的内容编码类型(默认: \"application/x-www-form-urlencoded; charset=UTF-8\")\n          async：是否异步\n        timeout：设置请求超时时间（毫秒）\n      beforeSend：发送请求前执行的函数(全局)\n        complete：完成之后执行的回调函数(全局)\n        success：成功之后执行的回调函数(全局)\n          error：失败之后执行的回调函数(全局)\n        accepts：通过请求头发送给服务器，告诉服务器当前客户端可接受的数据类型\n        dataType：将服务器端返回的数据转换成指定类型\n          \"xml\": 将服务器端返回的内容转换成xml格式\n          \"text\": 将服务器端返回的内容转换成普通文本格式\n          \"html\": 将服务器端返回的内容转换成普通文本格式，在插入DOM中时，如果包含JavaScript标签，则会尝试去执行。\n        \"script\": 尝试将返回值当作JavaScript去执行，然后再将服务器端返回的内容转换成普通文本格式\n          \"json\": 将服务器端返回的内容转换成相应的JavaScript对象\n        \"jsonp\": JSONP 格式使用 JSONP 形式调用函数时，如 \"myurl?callback=?\" jQuery 将自动替换 ? 为正确的函数名，以执行回调函数<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Ajax异步加载数据\"><a href=\"#Ajax异步加载数据\" class=\"headerlink\" title=\"Ajax异步加载数据\"></a>Ajax异步加载数据</h3><p>实现了数据回显</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n   <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#btn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n           $<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;pageContext.request.contextPath&#125;/a2\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n               console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n               <span class=\"token keyword\">var</span> html<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n               <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span>data<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                   html<span class=\"token operator\">+=</span> <span class=\"token string\">\"&lt;tr>\"</span> <span class=\"token operator\">+</span>\n                       <span class=\"token string\">\"&lt;td>\"</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/td>\"</span><span class=\"token operator\">+</span>\n                       <span class=\"token string\">\"&lt;td>\"</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/td>\"</span> <span class=\"token operator\">+</span>\n                       <span class=\"token string\">\"&lt;td>\"</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/td>\"</span> <span class=\"token operator\">+</span>\n                       <span class=\"token string\">\"&lt;/tr>\"</span>\n              <span class=\"token punctuation\">&#125;</span> \t<span class=\"token comment\">//html拼接</span>\n               <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"拦截器Interceptor\"><a href=\"#拦截器Interceptor\" class=\"headerlink\" title=\"拦截器Interceptor\"></a>拦截器Interceptor</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>SpringMVC的处理器拦截器类似于Servlet开发中的过滤器Filter,用于对处理器进行预处理和后处理。开发者可以自己定义一些拦截器来实现特定的功能。可用于验证用户是否登录 (认证用户)</p></blockquote>\n<p>过滤器和拦截器的区别：</p>\n<p>过滤器：</p>\n<ul>\n<li>servlet规范中的一部分，任何java web工程都可以使用</li>\n<li>在url-pattern中配置了/*之后，可以对所有要访问的资源进行拦截</li>\n</ul>\n<p>拦截器 (是AOP思想的具体应用)</p>\n<ul>\n<li>拦截器是SpringMVC框架自己的，只有使用了SpringMVC框架的工程才能使用</li>\n<li>拦截器只会拦截访问的控制器方法， 如果访问的是jsp/html/css/image/js是不会进行拦截的</li>\n</ul>\n<p>想要自定义拦截器，必须实现 HandlerInterceptor 接口</p>\n<p>在springmvc的配置文件中配置拦截器</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!--关于拦截器的配置--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>interceptors</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>interceptor</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token comment\">&lt;!--/** 包括路径及其子路径--></span>\n            <span class=\"token comment\">&lt;!--/admin/* 拦截的是/admin/add等等这种 , /admin/add/user不会被拦截--></span>\n            <span class=\"token comment\">&lt;!--/admin/** 拦截的是/admin/下的所有--></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>mapping</span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/somewhere/**<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n            <span class=\"token comment\">&lt;!--拦截somewhere下的 somewhere用@RequestMapping()配置 --></span>\n            <span class=\"token comment\">&lt;!--bean配置的就是拦截器--></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.maskros.interceptor.MyInterceptor<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">mvc:</span>interceptor</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">mvc:</span>interceptors</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>每写一个拦截器要到xml中配置这个拦截器</p>\n<p>exp：未登录时点击主页按钮会被拦截器重定向到登录页面</p>\n<h2 id=\"杂记\"><a href=\"#杂记\" class=\"headerlink\" title=\"杂记\"></a>杂记</h2><p>SpringMVC + Vue + SpringBoot + SpringCloud + Linux</p>\n<p>Spring：IOC 和 AOP</p>\n<p>SpringMVC：SpringMVC的执行流程，SSM框架整合</p>\n<p>SSM =  javaweb做项目</p>\n<p>MVC：模型 (dao, service) , 视图 (jsp) , 控制器 (servlet)</p>\n<p>servlet: 转发 重定向</p>\n<p>前端 数据传输 实体类</p>\n<p>实体类：用户名 密码  生日 ….. n个</p>\n<p>前端：用户名 密码</p>\n<p>pojo: User</p>\n<p>vo: UserVo</p>\n<p>MVVM:  M - V - VM (ViewModel: 双向绑定)</p>\n<p>form表单 method: get/post</p>\n<pre class=\"line-numbers language-jsp\" data-language=\"jsp\"><code class=\"language-jsp\">&lt;form action&#x3D;&quot;&#x2F;hello&quot; method&#x3D;&quot;post&quot;&gt;\n    &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;method&quot;&gt;\n    &lt;input type&#x3D;&quot;submit&quot;&gt;\n&lt;&#x2F;form&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>Spring: 大杂烩，我们可以将SpringMVC中所有要用到的Bean，注册到Spring中</p>\n<p>访问网站：-&gt; Servlet(中转调度) &lt;=&gt; Service -&gt; Dao -&gt; Sql</p>\n<p>前后端分离时代：</p>\n<p>后端部署后端，提供接口，提供数据：json</p>\n<p>前端独立部署，负责渲染后端的数据</p>\n<p>js:</p>\n<ul>\n<li>函数：闭包() ()</li>\n<li>Dom<ul>\n<li>id, name, tag</li>\n<li>create, remove</li>\n</ul>\n</li>\n<li>Bom<ul>\n<li>window</li>\n<li>document</li>\n</ul>\n</li>\n</ul>\n<p>ES6: import require</p>\n<p>js:</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">'name'</span><span class=\"token operator\">:</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token comment\">// data传键值对 &#123;x:y&#125;  .val()==value 左边的name对应controller的name 右边的username对应下面输入框的id,加#才能取到！    </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<p>IDEA alt+insert 快捷键 实现接口等等 </p>\n","text":"SpringMVC学习杂记 注：杂记即为看到啥记啥 毫无章法 乱jb记 常见的服务器端MVC框架有：Struts、Spring MVC、ASP.NET MVC、Zend Framework、JSF；常见前端MVC框架：vue、angularjs、react、backbone；由M...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"NOTE","slug":"NOTE","count":5,"path":"api/categories/NOTE.json"}],"tags":[{"name":"note","slug":"note","count":10,"path":"api/tags/note.json"},{"name":"springMVC","slug":"springMVC","count":1,"path":"api/tags/springMVC.json"},{"name":"java","slug":"java","count":1,"path":"api/tags/java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SpringMVC%E5%AD%A6%E4%B9%A0%E6%9D%82%E8%AE%B0\"><span class=\"toc-text\">SpringMVC学习杂记</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Spring\"><span class=\"toc-text\">Spring</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">三层架构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BC%98%E8%89%AF%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">优良特性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">体系结构</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MVC%E8%81%8C%E8%B4%A3%E5%88%86%E6%9E%90\"><span class=\"toc-text\">MVC职责分析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Servlet\"><span class=\"toc-text\">Servlet</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SpringMVC\"><span class=\"toc-text\">SpringMVC</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E5%BF%83%E6%8E%A7%E5%88%B6%E5%99%A8\"><span class=\"toc-text\">中心控制器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SpringMVC%E6%89%A7%E8%A1%8C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">SpringMVC执行原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E7%89%88\"><span class=\"toc-text\">配置版</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E2%80%BB%E6%B3%A8%E8%A7%A3%E7%89%88\"><span class=\"toc-text\">※注解版</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A7%E5%88%B6%E5%99%A8%E5%92%8CRestFul\"><span class=\"toc-text\">控制器和RestFul</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0Controller%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">实现Controller接口</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3-Controller\"><span class=\"toc-text\">使用注解@Controller</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#RequestMapping-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">@RequestMapping 使用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#RestFul%E9%A3%8E%E6%A0%BC\"><span class=\"toc-text\">RestFul风格</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%92%8C%E8%B7%B3%E8%BD%AC\"><span class=\"toc-text\">数据处理和跳转</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Json\"><span class=\"toc-text\">Json</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Controller%E8%BF%94%E5%9B%9EJson%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">Controller返回Json数据</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Jackson%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Jackson使用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#FastJson%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">FastJson使用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">乱码问题</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Ajax\"><span class=\"toc-text\">Ajax</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#jQuery-ajax\"><span class=\"toc-text\">jQuery.ajax</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Ajax%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">Ajax异步加载数据</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8B%A6%E6%88%AA%E5%99%A8Interceptor\"><span class=\"toc-text\">拦截器Interceptor</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9D%82%E8%AE%B0\"><span class=\"toc-text\">杂记</span></a></li></ol></li></ol>","author":{"name":"Maskros","slug":"blog-author","avatar":"/img/logo_Maskros.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"https://github.com/Maskros-new","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"iconfont icon-bilibili-line","link":"https://space.bilibili.com/355516889"},"codeforces":{"icon":"iconfont icon-codeforces","link":"https://codeforces.com/profile/1ronMaker"},"mail":{"icon":"iconfont icon-mail","link":"mailto:1164528260@qq.com"}}}},"mapped":true,"prev_post":{"title":"kmp & exkmp","uid":"e2155c016c02706041cead02c4e9a9a6","slug":"kmp & exkmp","date":"2021-10-23T17:02:50.000Z","updated":"2022-01-22T09:37:50.261Z","comments":true,"path":"api/articles/kmp & exkmp.json","keywords":null,"cover":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg-blog.csdnimg.cn%2F20210304172228208.png%3Fx-oss-process%3Dimage%2Fwatermark%2Ctype_ZmFuZ3poZW5naGVpdGk%2Cshadow_10%2Ctext_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ3NDcwODk5%2Csize_16%2Ccolor_FFFFFF%2Ct_70&refer=http%3A%2F%2Fimg-blog.csdnimg.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1637252921&t=f58714adf6773126c668b5b71bd6203a","text":"kmp &amp; exkmpKnuth-Morris-Pratt &amp; entend kmp 字符串匹配 kmp Keywords：next[] 由BF改进，O(m+n)，传世经典属于是😅 以下均假设主串为 S，模式串为 P What is next[] ? 针对模式串，...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"ALGORITHMS","slug":"ALGORITHMS","count":5,"path":"api/categories/ALGORITHMS.json"}],"tags":[{"name":"ACM","slug":"ACM","count":15,"path":"api/tags/ACM.json"},{"name":"note","slug":"note","count":10,"path":"api/tags/note.json"},{"name":"algorithm","slug":"algorithm","count":7,"path":"api/tags/algorithm.json"},{"name":"string","slug":"string","count":5,"path":"api/tags/string.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"/img/logo_Maskros.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"https://github.com/Maskros-new","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"iconfont icon-bilibili-line","link":"https://space.bilibili.com/355516889"},"codeforces":{"icon":"iconfont icon-codeforces","link":"https://codeforces.com/profile/1ronMaker"},"mail":{"icon":"iconfont icon-mail","link":"mailto:1164528260@qq.com"}}}}},"next_post":{"title":"STL使用手册","uid":"0b411eca06d29c39e2fc21f5cd175527","slug":"STL使用手册","date":"2021-08-13T06:15:31.000Z","updated":"2022-01-22T09:38:07.375Z","comments":true,"path":"api/articles/STL使用手册.json","keywords":null,"cover":"https://img0.baidu.com/it/u=1597304645,862627513&fm=26&fmt=auto&gp=0.jpg","text":"STL使用手册Standard Template Library 又名《👴怕忘了先把他写下来》 我 是 谁 ?斯丹德儿的 坦普雷特 莱博瑞 即标准模板库 重要特点：数据结构和算法的分离 重要特性：不是面向对象的 逻辑层次：体现了泛型化程序设计的思想 实现层次：以一种类型参数化的方...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"ALGORITHMS","slug":"ALGORITHMS","count":5,"path":"api/categories/ALGORITHMS.json"}],"tags":[{"name":"ACM","slug":"ACM","count":15,"path":"api/tags/ACM.json"},{"name":"note","slug":"note","count":10,"path":"api/tags/note.json"},{"name":"algorithm","slug":"algorithm","count":7,"path":"api/tags/algorithm.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"/img/logo_Maskros.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"https://github.com/Maskros-new","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"iconfont icon-bilibili-line","link":"https://space.bilibili.com/355516889"},"codeforces":{"icon":"iconfont icon-codeforces","link":"https://codeforces.com/profile/1ronMaker"},"mail":{"icon":"iconfont icon-mail","link":"mailto:1164528260@qq.com"}}}}}}