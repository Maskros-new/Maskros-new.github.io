{"title":"CSP202109-2 非零段划分","uid":"042db1f923ca587c1cde6dd016acd4b3","slug":"probs/CSP非零段划分","date":"2022-03-01T14:30:50.000Z","updated":"2022-03-01T15:41:17.264Z","comments":true,"path":"api/articles/probs/CSP非零段划分.json","keywords":null,"cover":null,"content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.5.1/katex.min.css\"><h1><span id=\"csp-202109-2-非零段划分-差分\">CSP 202109-2 非零段划分 (差分)</span></h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"http://118.190.20.162/view.page?gpid=T130\">link</a></p>\n<p>赛时没想明白，写了个暴力70分，一直惦记着这个题，故在此重做</p></blockquote>\n<h2><span id=\"题面\">题面</span></h2><p>A1,A2,⋯,An 是一个由 n 个自然数（非负整数）组成的数组。我们称其中 Ai,⋯,Aj 是一个非零段，当且仅当以下条件同时满足：</p>\n<ul>\n<li>1≤i≤j≤n；</li>\n<li>对于任意的整数 k，若 i≤k≤j，则 Ak&gt;0；</li>\n<li>i=1 或 Ai−1=0；</li>\n<li>j=n 或 Aj+1=0。</li>\n</ul>\n<p>下面展示了几个简单的例子：</p>\n<ul>\n<li>A=[3,1,2,0,0,2,0,4,5,0,2] 中的 4 个非零段依次为 [3,1,2]、[2]、[4,5] 和 [2]；</li>\n<li>A=[2,3,1,4,5] 仅有 1 个非零段；</li>\n<li>A=[0,0,0] 则不含非零段（即非零段个数为 0）。</li>\n</ul>\n<p>现在我们可以对数组 A 进行如下操作：任选一个正整数 p，然后将 A 中所有小于 p 的数都变为 0。试选取一个合适的 p，使得数组 A 中的非零段个数达到最大。若输入的 A 所含非零段数已达最大值，可取 p=1，即不对 A 做任何修改。</p>\n<p>规定： 全部的测试数据满足 n≤5e5，且数组 A 中的每一个数均不超过 1e4</p>\n<h2><span id=\"题解\">题解</span></h2><p>非零段可以理解为孤立的岛屿，不同的岛屿之间用 0 分隔开。<br>选择一个正整数 p ，将所有小于 p 的数都变为 0 ，可以理解为海平面上涨到 p 的位置，p  以下的部分都被淹没，求孤立岛屿数最大是多少。<br>可以先考虑 p = 10001 的情况：所有数字都被海水淹没了，显然只有 0 00 个岛屿。然后海平面逐渐下降，观察岛屿数量的变化。可以看出：每当一个凸峰出现，岛屿数就多了一个；而每当一个凹谷出现，原本相邻的两个岛屿就被这个凹谷连接在了一起，岛屿数减少一个。<br>凸峰点和凹谷点的判断需要注意平面（如 1 2 2 1 ）的存在：若连续一段数字相同，可以把他们合并成一个点（1 2 1），这样对答案不会产生影响，可以使用 std::unique() 函数来去掉相邻重复元素。</p>\n<h2><span id>🐴</span></h2><pre class=\"line-numbers language-c++\" data-language=\"c++\"><code class=\"language-c++\">vector&lt;int&gt; v;\nint high[100005], low[100005], cnt[100005];\nvoid solve(){\n    int n; cin &gt;&gt; n;\n    v.pb(0);\n    rep(i, 0, n) {\n        int t; cin &gt;&gt; t;\n        if(i &amp;&amp; t != v[v.size() - 1] || i == 0) v.pb(t); \n    }\n    v.pb(0);\n    rep(i, 1, v.size() - 1) {\n        if(v[i] &gt; v[i - 1] &amp;&amp; v[i] &gt; v[i + 1]) high[v[i]]++;\n        if(v[i] &lt; v[i - 1] &amp;&amp; v[i] &lt; v[i + 1]) low[v[i]]++;\n    }\n    cnt[100001] = 0;\n    int ans = 0;\n    red(i, 100001, 0) {\n        cnt[i] = cnt[i + 1] + high[i] - low[i];\n        ans = max(ans, cnt[i]);\n    }\n    cout &lt;&lt; ans &lt;&lt; '\\n';\n}<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","feature":true,"text":"CSP 202109-2 非零段划分 (差分) link 赛时没想明白，写了个暴力70分，一直惦记着这个题，故在此重做 题面A1,A2,⋯,An 是一个由 n 个自然数（非负整数）组成的数组。我们称其中 Ai,⋯,Aj 是一个非零段，当且仅当以下条件同时满足： 1≤i≤j≤n； ...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"SOLUTIONS","slug":"SOLUTIONS","count":20,"path":"api/categories/SOLUTIONS.json"}],"tags":[{"name":"思维","slug":"思维","count":14,"path":"api/tags/思维.json"},{"name":"差分","slug":"差分","count":1,"path":"api/tags/差分.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">CSP 202109-2 非零段划分 (差分)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">题面</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">题解</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">🐴</span></a></li></ol></li></ol>","author":{"name":"Maskros","slug":"blog-author","avatar":"/img/logo_Maskros.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"https://github.com/Maskros-new","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"iconfont icon-bilibili-line","link":"https://space.bilibili.com/355516889"},"codeforces":{"icon":"iconfont icon-codeforces","link":"https://codeforces.com/profile/1ronMaker"},"mail":{"icon":"iconfont icon-mail","link":"mailto:1164528260@qq.com"}}}},"mapped":true,"prev_post":{"title":"Codeforce Edu 124 & Round 777 Problem D","uid":"fe758aa173e3b630968b9d21e110c476","slug":"codeforces/cf Edu 124 & 777 D","date":"2022-03-13T13:20:00.000Z","updated":"2022-03-14T15:04:58.363Z","comments":true,"path":"api/articles/codeforces/cf Edu 124 & 777 D.json","keywords":null,"cover":null,"text":"Codeforce Edu 124 &amp; Round 777 Problem DEdu 124 D Nearest_Excluded_Points (BFS) 题意： 给定 个点的坐标，对于每个点，打印哈密顿距离最近且不包含在该 个点中的点的坐标。 思路： 从外往里bfs。...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"SOLUTIONS","slug":"SOLUTIONS","count":20,"path":"api/categories/SOLUTIONS.json"}],"tags":[{"name":"solutions","slug":"solutions","count":18,"path":"api/tags/solutions.json"},{"name":"codeforces","slug":"codeforces","count":11,"path":"api/tags/codeforces.json"},{"name":"ACM","slug":"ACM","count":28,"path":"api/tags/ACM.json"},{"name":"思维","slug":"思维","count":14,"path":"api/tags/思维.json"},{"name":"bfs","slug":"bfs","count":1,"path":"api/tags/bfs.json"},{"name":"讨论","slug":"讨论","count":1,"path":"api/tags/讨论.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"/img/logo_Maskros.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"https://github.com/Maskros-new","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"iconfont icon-bilibili-line","link":"https://space.bilibili.com/355516889"},"codeforces":{"icon":"iconfont icon-codeforces","link":"https://codeforces.com/profile/1ronMaker"},"mail":{"icon":"iconfont icon-mail","link":"mailto:1164528260@qq.com"}}}},"feature":true},"next_post":{"title":"Codeforces Round 773 (Div.2)","uid":"c274ea4c473124c2ac8534153c8cc713","slug":"codeforces/cf 773","date":"2022-02-23T14:30:00.000Z","updated":"2022-02-23T14:45:35.740Z","comments":true,"path":"api/articles/codeforces/cf 773.json","keywords":null,"cover":null,"text":"Codeforces Round #773 (Div.2) rk 293 AB各自白给了一发，但是上大分，嘻嘻 A_Hard_Way 水题，一开始没读懂题直接猜答案猜错了WA1，急了大火 void solve() { int x1, y1, x2, y2, x3, y3; cin...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"SOLUTIONS","slug":"SOLUTIONS","count":20,"path":"api/categories/SOLUTIONS.json"}],"tags":[{"name":"solutions","slug":"solutions","count":18,"path":"api/tags/solutions.json"},{"name":"codeforces","slug":"codeforces","count":11,"path":"api/tags/codeforces.json"},{"name":"ACM","slug":"ACM","count":28,"path":"api/tags/ACM.json"},{"name":"构造","slug":"构造","count":4,"path":"api/tags/构造.json"}],"author":{"name":"Maskros","slug":"blog-author","avatar":"/img/logo_Maskros.jpg","link":"/","description":"Be Legendary within the hasty keys","socials":{"github":"https://github.com/Maskros-new","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"iconfont icon-bilibili-line","link":"https://space.bilibili.com/355516889"},"codeforces":{"icon":"iconfont icon-codeforces","link":"https://codeforces.com/profile/1ronMaker"},"mail":{"icon":"iconfont icon-mail","link":"mailto:1164528260@qq.com"}}}},"feature":true}}